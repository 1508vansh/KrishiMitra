import React, { useState } from 'react';
import { useSelector } from 'react-redux';

const AskAssistantModal = ({ onClose }) => {
  const { language } = useSelector(state => state.auth);
  const [question, setQuestion] = useState('');
  const [response, setResponse] = useState('');

  const getText = (english, malayalam, hindi) => {
    if (language === 'malayalam') return malayalam;
    if (language === 'hindi') return hindi;
    return english;
  };

  const sampleQuestions = [
    getText('When to sow?', '‡¥é‡¥™‡µç‡¥™‡µã‡µæ ‡¥µ‡¥ø‡¥§‡¥Ø‡µç‡¥ï‡µç‡¥ï‡¥£‡¥Ç?', '‡§ï‡§¨ ‡§¨‡•ã‡§®‡§æ ‡§π‡•à?'),
    getText('How much water to give?', '‡¥é‡¥§‡µç‡¥∞ ‡¥µ‡µÜ‡¥≥‡µç‡¥≥‡¥Ç ‡¥®‡µΩ‡¥ï‡¥£‡¥Ç?', '‡§ï‡§ø‡§§‡§®‡§æ ‡§™‡§æ‡§®‡•Ä ‡§¶‡•á‡§®‡§æ ‡§π‡•à?'),
    getText('Which fertilizer to use?', '‡¥è‡¥§‡µç ‡¥µ‡¥≥‡¥Ç ‡¥â‡¥™‡¥Ø‡µã‡¥ó‡¥ø‡¥ï‡µç‡¥ï‡¥£‡¥Ç?', '‡§ï‡•å‡§® ‡§∏‡§æ ‡§â‡§∞‡•ç‡§µ‡§∞‡§ï ‡§â‡§™‡§Ø‡•ã‡§ó ‡§ï‡§∞‡•á‡§Ç?')
  ];

  const handleAsk = () => {
    // Mock AI response
    setResponse(getText(
      'Thank you for your question! I am an AI farming assistant. In the real application, I will provide personalized answers using Gemini API.',
      '‡¥®‡¥ø‡¥ô‡µç‡¥ô‡¥≥‡µÅ‡¥ü‡µÜ ‡¥ö‡µã‡¥¶‡µç‡¥Ø‡¥§‡µç‡¥§‡¥ø‡¥®‡µç ‡¥®‡¥®‡µç‡¥¶‡¥ø! ‡¥û‡¥æ‡µª ‡¥ï‡µÉ‡¥∑‡¥ø ‡¥µ‡¥ø‡¥¶‡¥ó‡µç‡¥¶‡µç‡¥ß‡¥®‡¥æ‡¥Ø AI ‡¥∏‡¥π‡¥æ‡¥Ø‡¥ø‡¥Ø‡¥æ‡¥£‡µç. ‡¥Ø‡¥•‡¥æ‡µº‡¥§‡µç‡¥• ‡¥Ü‡¥™‡µç‡¥≤‡¥ø‡¥ï‡µç‡¥ï‡µá‡¥∑‡¥®‡¥ø‡µΩ, ‡¥û‡¥æ‡µª Gemini API ‡¥â‡¥™‡¥Ø‡µã‡¥ó‡¥ø‡¥ö‡µç‡¥ö‡µç ‡¥µ‡µç‡¥Ø‡¥ï‡µç‡¥§‡¥ø‡¥ó‡¥§‡¥Æ‡¥æ‡¥Ø ‡¥â‡¥§‡µç‡¥§‡¥∞‡¥ô‡µç‡¥ô‡µæ ‡¥®‡µΩ‡¥ï‡µÅ‡¥Ç.',
      '‡§Ü‡§™‡§ï‡•á ‡§™‡•ç‡§∞‡§∂‡•ç‡§® ‡§ï‡•á ‡§≤‡§ø‡§è ‡§ß‡§®‡•ç‡§Ø‡§µ‡§æ‡§¶! ‡§Æ‡•à‡§Ç ‡§è‡§ï AI ‡§ï‡•É‡§∑‡§ø ‡§∏‡§π‡§æ‡§Ø‡§ï ‡§π‡•Ç‡§Ç‡•§ ‡§µ‡§æ‡§∏‡•ç‡§§‡§µ‡§ø‡§ï ‡§è‡§™‡•ç‡§≤‡§ø‡§ï‡•á‡§∂‡§® ‡§Æ‡•á‡§Ç, ‡§Æ‡•à‡§Ç ‡§ú‡•á‡§Æ‡§ø‡§®‡•Ä API ‡§ï‡§æ ‡§â‡§™‡§Ø‡•ã‡§ó ‡§ï‡§∞‡§ï‡•á ‡§µ‡•ç‡§Ø‡§ï‡•ç‡§§‡§ø‡§ó‡§§ ‡§â‡§§‡•ç‡§§‡§∞ ‡§™‡•ç‡§∞‡§¶‡§æ‡§® ‡§ï‡§∞‡•Ç‡§Ç‡§ó‡§æ‡•§'
    ));
  };

  return (
    <div className="fixed inset-0 bg-black bg-opacity-50 flex items-center justify-center p-2 sm:p-4 z-50">
      <div className="bg-white rounded-lg shadow-xl w-full max-w-2xl max-h-[90vh] overflow-y-auto">
        <div className="bg-blue-600 text-white p-3 sm:p-4 rounded-t-lg sticky top-0">
          <h2 className="text-lg sm:text-xl font-bold">
            ü§ñ {getText('Ask AI Assistant', 'AI ‡¥∏‡¥π‡¥æ‡¥Ø‡¥ø‡¥Ø‡µã‡¥ü‡µç ‡¥ö‡µã‡¥¶‡¥ø‡¥ï‡µç‡¥ï‡µÅ‡¥ï', 'AI ‡§∏‡§π‡§æ‡§Ø‡§ï ‡§∏‡•á ‡§™‡•Ç‡§õ‡•á‡§Ç')}
          </h2>
        </div>
        
        <div className="p-3 sm:p-4 space-y-3 sm:space-y-4">
          {/* Quick Questions */}
          <div>
            <label className="block text-sm font-bold text-gray-700 mb-1 sm:mb-2">
              {getText('Quick Questions', '‡¥µ‡µá‡¥ó‡¥§‡µç‡¥§‡¥ø‡¥≤‡µÅ‡¥≥‡µç‡¥≥ ‡¥ö‡µã‡¥¶‡µç‡¥Ø‡¥ô‡µç‡¥ô‡µæ', '‡§§‡•ç‡§µ‡§∞‡§ø‡§§ ‡§™‡•ç‡§∞‡§∂‡•ç‡§®')}
            </label>
            <div className="flex flex-wrap gap-2">
              {sampleQuestions.map((q, index) => (
                <button
                  key={index}
                  onClick={() => setQuestion(q)}
                  className="bg-gray-100 hover:bg-gray-200 px-2 sm:px-3 py-1 sm:py-2 rounded-lg text-xs sm:text-sm transition"
                >
                  {q}
                </button>
              ))}
            </div>
          </div>

          {/* Question Input */}
          <div>
            <label className="block text-sm font-bold text-gray-700 mb-1 sm:mb-2">
              {getText('Your Question', '‡¥®‡¥ø‡¥ô‡µç‡¥ô‡¥≥‡µÅ‡¥ü‡µÜ ‡¥ö‡µã‡¥¶‡µç‡¥Ø‡¥Ç', '‡§Ü‡§™‡§ï‡§æ ‡§™‡•ç‡§∞‡§∂‡•ç‡§®')}
            </label>
            <textarea
              value={question}
              onChange={(e) => setQuestion(e.target.value)}
              rows="3"
              className="w-full p-2 sm:p-3 border border-gray-300 rounded-lg focus:outline-none focus:ring-2 focus:ring-blue-500 text-sm sm:text-base"
              placeholder={getText('Type your farming question here...', '‡¥®‡¥ø‡¥ô‡µç‡¥ô‡¥≥‡µÅ‡¥ü‡µÜ ‡¥ï‡µÉ‡¥∑‡¥ø ‡¥ö‡µã‡¥¶‡µç‡¥Ø‡¥Ç ‡¥á‡¥µ‡¥ø‡¥ü‡µÜ ‡¥ü‡µà‡¥™‡µç‡¥™‡µç ‡¥ö‡µÜ‡¥Ø‡µç‡¥Ø‡µÅ‡¥ï...', '‡§Ö‡§™‡§®‡§æ ‡§ï‡•É‡§∑‡§ø ‡§™‡•ç‡§∞‡§∂‡•ç‡§® ‡§Ø‡§π‡§æ‡§Å ‡§ü‡§æ‡§á‡§™ ‡§ï‡§∞‡•á‡§Ç...')}
            />
          </div>

          {/* Response */}
          {response && (
            <div className="bg-green-50 p-2 sm:p-4 rounded-lg">
              <div className="font-bold text-green-800 mb-1 sm:mb-2 text-sm sm:text-base">
                {getText('AI Assistant Response', 'AI ‡¥∏‡¥π‡¥æ‡¥Ø‡¥ø‡¥Ø‡µÅ‡¥ü‡µÜ ‡¥™‡µç‡¥∞‡¥§‡¥ø‡¥ï‡¥∞‡¥£‡¥Ç', 'AI ‡§∏‡§π‡§æ‡§Ø‡§ï ‡§™‡•ç‡§∞‡§§‡§ø‡§ï‡•ç‡§∞‡§ø‡§Ø‡§æ')}
              </div>
              <div className="text-green-700 text-sm sm:text-base">{response}</div>
            </div>
          )}

          <div className="flex flex-col sm:flex-row space-y-2 sm:space-y-0 sm:space-x-3 pt-3 sm:pt-4">
            <button
              onClick={onClose}
              className="flex-1 bg-gray-300 text-gray-700 py-2 sm:py-3 rounded-lg font-bold hover:bg-gray-400 transition text-sm sm:text-base"
            >
              {getText('Close', '‡¥Ö‡¥ü‡¥Ø‡µç‡¥ï‡µç‡¥ï‡µÅ‡¥ï', '‡§¨‡§Ç‡§¶ ‡§ï‡§∞‡•á‡§Ç')}
            </button>
            <button
              onClick={handleAsk}
              className="flex-1 bg-blue-600 text-white py-2 sm:py-3 rounded-lg font-bold hover:bg-blue-700 transition text-sm sm:text-base"
            >
              {getText('Ask', '‡¥ö‡µã‡¥¶‡¥ø‡¥ï‡µç‡¥ï‡µÅ‡¥ï', '‡§™‡•Ç‡§õ‡•á‡§Ç')}
            </button>
          </div>
        </div>
      </div>
    </div>
  );
};

export default AskAssistantModal;